name: Set Secret
description: Set a secret
branding:
  icon: lock
  color: blue
inputs:
  organization:
    description: Organization
    required: false
    default: ${{ github.repository_owner }}
  repository:
    description: Repository
    required: false
  name:
    description: Secret name
    required: true
  value:
    description: Secret value
    required: true
  token:
    description: Personal access token
    required: true
runs:
  using: composite
  steps:
    - shell: bash
      env:
        ORGANIZATION: ${{ inputs.organization }}
        REPOSITORY: ${{ inputs.repository }}
        NAME: ${{ inputs.name }}
        VALUE: ${{ inputs.value }}
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        create_organization_secret () {
          local organization="$1"
          local name="$2"
          local value="$3"

          gh secret set "$name" -b "$value" --org "$organization"
        }

        get_organization_secret_visibility () {
          local organization="$1"
          local name="$2"
          echo $(
            gh api \
              -H "Accept: application/vnd.github.v3+json" \
              "/orgs/$organization/actions/secrets/$name" \
            | jq -r '.visibility'
          )
        }

        get_organization_secret_selected_repositories () {
          local organization="$1"
          local name="$2"
          echo $(
            gh api \
              -H "Accept: application/vnd.github.v3+json" \
              "/orgs/$organization/actions/secrets/$name/repositories" \
            | jq -r '.repositories[].name'
            | tr '\n' ' '
          )
        }

        update_organization_secret () {
          local organization="$1"
          local name="$2"
          local value="$3"

          local visibility=$(get_organization_secret_visibility "$organization" "$name")
          if [ "$visibility" = 'selected' ]; then
            local selected_repos=$(get_organization_secret_selected_repositories "$organization" "$name")
            gh secret set "$name" -b "$value" --org "$organization" --visibility selected --repos "$selected_repos"
          else
            gh secret set "$name" -b "$value" --org "$organization" --visibility "$visibility"
          fi
        }

        organization_secret_exists () {
          local organization="$1"
          local name="$2"
          gh api \
            -H "Accept: application/vnd.github.v3+json" \
            "/orgs/$organization/actions/secrets/$name" \
            &> /dev/null \
          && echo true \
          || echo false
        }

        set_organization_secret () {
          local organization="$1"
          local name="$2"
          local value="$3"

          local exists=$(organization_secret_exists)
          if $exists; then
            update_organization_secret "$organization" "$name" "$value"
          else
            create_organization_secret "$organization" "$name" "$value"
          fi
        }

        set_repository_secret () {
          local repository="$1"
          local name="$2"
          local value="$3"

          gh secret set "$name" -b "$value" --repo "$repository"
        }

        if [ -z "$REPOSITORY" ]; then
          set_organization_secret "$ORGANIZATION" "$NAME" "$VALUE"
        else
          set_repository_secret "$REPOSITORY" "$NAME" "$VALUE"
        fi
